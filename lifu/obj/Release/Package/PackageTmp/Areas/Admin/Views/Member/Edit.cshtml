@using System.Collections

@using lifu.Models
@model lifu.Models.Member

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Member</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Account)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.Account)
            @Html.HiddenFor(model => model.Account)

        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.Password("NewPassword")
            <input type="hidden" id="hash" name="hash" value="@(Model.Password)" >
            @Html.HiddenFor(model=>model.PasswordSalt)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
             @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Gender)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(GenderType))))
            @Html.ValidationMessageFor(model => model.Gender)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
             @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        @{
           
    if (!(Model.MyPic == null))
    {
            <div class="editor-label">
                @Html.LabelFor(model => model.MyPic)
            </div>
            <div class="editor-field">
                <img src="~/upfiles/@Model.MyPic" width="100px"/>
            </div>
    }
        }


        <div class="editor-label">
            @Html.LabelFor(model => model.JobTitle)
        </div>
        <div class="editor-field">
             @Html.EditorFor(model => model.JobTitle)
            @Html.ValidationMessageFor(model => model.JobTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MyUnit)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.UnitId, new SelectList(ViewBag.Units as IEnumerable, "Id", "Subject"))
            @Html.ValidationMessageFor(model => model.UnitId)
        </div>

        <div class="editor-field">
            @Html.LabelFor(model => model.Permission)
            <div id="tree3"></div>
            @Html.HiddenFor(model => model.Permission)
        </div>
        @Html.HiddenFor(model => model.InitDate)
        @Html.HiddenFor(model => model.Poster)
        @Html.HiddenFor(model => model.MyPic)
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-ui.custom.js" type="text/javascript"></script>


    <link href="~/Content/themes/base/skin/ui.dynatree.css" rel="stylesheet" type="text/css" id="skinSheet">
    <script src="~/Scripts/jquery.dynatree.js" type="text/javascript"></script>
    <script src="~/Member/TreeScript/@Model.Id" type="text/javascript"></script>

}

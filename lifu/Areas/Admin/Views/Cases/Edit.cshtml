@using lifu.Models
@model lifu.Models.Cases

@{
    ViewBag.Title = "案件編輯";
}
<div class="tabbable">
    <!-- Only required for left/right tabs -->
    <ul class="nav nav-tabs" id="myTab">
        <li class="active"><a href="#tab1" data-toggle="tab">基本案例資料</a></li>
        <li><a href="#tab2" data-toggle="tab">建案相片</a></li>
        <li><a href="#tab3" data-toggle="tab">平面配置</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="tab1">
            <h2>案件編輯</h2>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <input type="hidden" name="page" value="@Request["page"]" />
                <input type="hidden" name="type" value="@Request["type"]" />
                <fieldset>
                    <legend>Cases</legend>

                    @Html.HiddenFor(model => model.Id)

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Subject)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Subject, new { placeholder = ModelsAttributeHelper<lifu.Models.Cases>.GetDisplayName("Subject") })
                         @Html.ValidationMessageFor(model => model.Subject)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.AreaId)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("AreaId")
                        @Html.ValidationMessageFor(model => model.AreaId)

                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Status)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.Status, new SelectList(Enum.GetValues(typeof(lifu.Models.CaseStatus))))
                        @Html.ValidationMessageFor(model => model.Status)

                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.UpImageUrl)
                    </div>
                    <div class="editor-field">
                        <input type="file" name="UpImageUrls" />
                        @Html.HiddenFor(model => model.UpImageUrl)
                        @if (!string.IsNullOrEmpty(Model.UpImageUrl))
                        {
                            <img src="~/upfiles/images/S@(Model.UpImageUrl)" />
                        }

                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.ServerImageUrl)
                    </div>
                    <div class="editor-field">
                        <input type="file" name="ServerImageUrls" />
                        @Html.HiddenFor(model => model.ServerImageUrl)
                        @if (!string.IsNullOrEmpty(Model.ServerImageUrl))
                        {
                            <img src="~/upfiles/images/S@(Model.ServerImageUrl)" />
                        }

                    </div>
                    
                    <div class="editor-label">
                        @Html.LabelFor(model => model.AreaImageUrl)
                    </div>
                    <div class="editor-field">
                        <input type="file" name="AreaImageUrls" />
                        @Html.HiddenFor(model => model.AreaImageUrl)
                        @if (!string.IsNullOrEmpty(Model.AreaImageUrl))
                        {
                            <img src="~/upfiles/images/S@(Model.AreaImageUrl)" />
                        }

                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Article)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Article, new { @class = "ckeditor" })
                        @Html.ValidationMessageFor(model => model.Article)

                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.StartDate)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.StartDate, "{0:d}", new { @class = "datepicker", target = "" })
                        @Html.ValidationMessageFor(model => model.StartDate)

                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.EndDate)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.EndDate, "{0:d}", new { @class = "datepicker", target = "" })
                        @Html.ValidationMessageFor(model => model.EndDate)

                    </div>



                    @Html.HiddenFor(model => model.Poster)
                    @Html.HiddenFor(model => model.InitDate)
                    @Html.HiddenFor(model => model.UpdateDate)
                    <p>
                        <input type="submit" value="更新" />
                    </p>
                </fieldset>
            }
        </div>
        <div class="tab-pane" id="tab2">
            <div>
                <p>
                    <a id="colorlink" class="btn" onclick="$.fn.colorbox({ width: '800', height: '800', iframe: true, href: '@Url.Action("Create", "CasePictures", new { caseId = ViewBag.Cid })' })" href="javascript:return false;">新增建案相片</a>
                </p>
                <table class="table" id="PictureTable">
                    <tr>


                        <th>
                            @Html.DisplayNameFor(model => model.Pictureses.FirstOrDefault().Subject)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Pictureses.FirstOrDefault().UpPicUrl)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Pictureses.FirstOrDefault().ListNum)
                        </th>
                        <th>
                            新排序
                        </th>

                        <th></th>
                    </tr>

                    @foreach (var item in Model.Pictureses.OrderBy(x => x.ListNum))
                    {
                        <tr>

                            <td>
                                @Html.DisplayFor(modelItem => item.Subject)
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.UpPicUrl))
                                {
                                    <img src="~/upfiles/images/S@(item.UpPicUrl)" />
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ListNum)
                            </td>
                            <td>
                                @Html.TextBoxFor(modelItem => item.ListNum, new { @class = "position" })
                            </td>

                            <td>

                                <input type="button" onclick="$.fn.colorbox({ width: '700', height: '600', iframe: true, href: '@Url.Action("Edit", "CasePictures", new { id = item.Id }) '})" value="編輯" />

                                @using (Html.BeginForm("Delete", "CasePictures"))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="submit" value="刪除" onclick="javascript: if (!window.confirm('你確定要刪除嗎?')) window.event.returnValue = false;" />
                                    @*這邊也有改*@
                                    @Html.Hidden("Pictureid", item.Id, new { @class = "Sid" })
                                }

                            </td>
                        </tr>
                    }

                </table>
                @using (Html.BeginForm("Sort", "CasePictures"))
                {
                    <div>
                        <input type="hidden" name="Id" value="@ViewBag.Cid" />
                        <input type="hidden" id="PictureSortData" name="SortData" />
                        <input type="submit" value="更新排序" />
                    </div>
                }
            </div>
        </div>
        <div class="tab-pane" id="tab3">
            <p>
                <a id="colorlink" class="btn" onclick="$.fn.colorbox({ width: '800', height: '800', iframe: true, href: '@Url.Action("Create", "CaseDiagram", new { caseId = ViewBag.Cid })' })" href="javascript:return false;">新增平面配置圖</a>
            </p>
            <table class="table" id="DiagramTable">
                <tr>


                    <th>
                        @Html.DisplayNameFor(model => model.Diagrams.FirstOrDefault().Subject)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.Diagrams.FirstOrDefault().UpPicUrl)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Diagrams.FirstOrDefault().ListNum)
                    </th>
                    <th>
                        新排序
                    </th>

                    <th></th>
                </tr>

                @foreach (var item in Model.Diagrams.OrderBy(x => x.ListNum))
                {
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.Subject)
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(item.UpPicUrl))
                            {
                                <img src="~/upfiles/images/S@(item.UpPicUrl)" width="120px" />
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ListNum)
                        </td>
                        <td>
                            @Html.TextBoxFor(modelItem => item.ListNum, new { @class = "position" })
                        </td>

                        <td>

                            <input type="button" onclick="$.fn.colorbox({ width: '700', height: '600', iframe: true, href: '@Url.Action("Edit", "CaseDiagram", new { id = item.Id }) '})" value="編輯" />

                            @using (Html.BeginForm("Delete", "CaseDiagram"))
                            {
                                @Html.AntiForgeryToken()
                                <input type="submit" value="刪除" onclick="javascript: if (!window.confirm('你確定要刪除嗎?')) window.event.returnValue = false;" />
                                @*這邊也有改*@
                                @Html.Hidden("Diagramid", item.Id, new { @class = "Sid" })
                            }

                        </td>
                    </tr>
                }

            </table>
            @using (Html.BeginForm("Sort", "CaseDiagram"))
            {
                <div>
                    <input type="hidden" name="Id" value="@ViewBag.Cid" />
                    <input type="hidden" id="DiagramSortData" name="SortData" />
                    <input type="submit" value="更新排序" />
                </div>
            }
        </div>
    </div>
</div>

   

    <div>
        <a href="javascript: window.history.back();">回上頁</a>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

    <script src="@Url.Content("~/Scripts/jquery.tablednd.0.5.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/Scripts/ckeditor/ckeditor.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.colorbox-min.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/colorbox.css")" rel="stylesheet" type="text/css" />
        @Scripts.Render("~/bundles/jqueryui")
        @Styles.Render("~/Content/themes/base/css")
        <script>
            $(document).ready(function () {
                $('#myTab a:eq(@ViewBag.type)').tab('show');
                $(".datepicker").datepicker();
                $("#PictureTable").tableDnD({
                    onDragClass: "showDragHandle",
                    onDrop: function (table, row) {
                        var rows = table.tBodies[0].rows;
                        var map = "";
                        for (var i = 1; i < rows.length; i++) {
                            $(rows[i]).find(".position").val(i);
                            map += $(rows[i]).find(".Sid").val() + ":" + i + ",";
                        }
                        $("#PictureSortData").val(map);
                    }
                });
                $("#DiagramTable").tableDnD({
                    onDragClass: "showDragHandle",
                    onDrop: function (table, row) {
                        var rows = table.tBodies[0].rows;
                        var map = "";
                        for (var i = 1; i < rows.length; i++) {
                            $(rows[i]).find(".position").val(i);
                            map += $(rows[i]).find(".Sid").val() + ":" + i + ",";
                        }
                        $("#DiagramSortData").val(map);
                    }
                });
                $("#colorlink").colorbox({ iframe: true, width: "80%", height: "80%" });
            });
        </script>
         <style>
        .position {
            width: 27px;
        }
    </style>
    }

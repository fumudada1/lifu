@using lifu.Models
@model lifu.Models.CaseService

@{
    ViewBag.Title = "索取資料維護";
}

<h2>索取資料維護</h2>

    @using (Html.BeginForm()) {

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>CaseService</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Data)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Data,new { placeholder=ModelsAttributeHelper<lifu.Models.CaseService>.GetDisplayName("Data") })
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Reserved)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Reserved,new { placeholder=ModelsAttributeHelper<lifu.Models.CaseService>.GetDisplayName("Reserved") })
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CostId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("CostId")
            @Html.ValidationMessageFor(model => model.CostId)
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AreaId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("AreaId")
            @Html.ValidationMessageFor(model => model.AreaId)
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TypeId)
        </div>
        <div class="editor-field">
            @Html.DropDownList("TypeId")
            @Html.ValidationMessageFor(model => model.TypeId)
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Name,new { placeholder=ModelsAttributeHelper<lifu.Models.CaseService>.GetDisplayName("Name") })
           
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Gender)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(GenderType))))
            @Html.ValidationMessageFor(model => model.Gender)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Birthday)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Birthday, "{0:d}", new { @class = "datepicker", target = "" })
            @Html.ValidationMessageFor(model => model.Birthday)

        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Telphone)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Telphone,new { placeholder=ModelsAttributeHelper<lifu.Models.CaseService>.GetDisplayName("Telphone") })
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Mobile)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Mobile,new { placeholder=ModelsAttributeHelper<lifu.Models.CaseService>.GetDisplayName("Mobile") })
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Email,new { placeholder=ModelsAttributeHelper<lifu.Models.CaseService>.GetDisplayName("Email") })
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Address,new { placeholder=ModelsAttributeHelper<lifu.Models.CaseService>.GetDisplayName("Address") })
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Information)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Information,new { placeholder=ModelsAttributeHelper<lifu.Models.CaseService>.GetDisplayName("Information") })
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BuyRequest)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.BuyRequest,new { placeholder=ModelsAttributeHelper<lifu.Models.CaseService>.GetDisplayName("BuyRequest") })
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MoerInformation)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.MoerInformation, new SelectList(Enum.GetValues(typeof(lifu.Models.MoreInformation))))
            @Html.ValidationMessageFor(model => model.MoerInformation)
           
        </div>

            @Html.HiddenFor(model => model.Poster)
            @Html.HiddenFor(model => model.InitDate)
            @Html.HiddenFor(model => model.UpdateDate)
        <p>
            <input type="submit" value="更新" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("回列表", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

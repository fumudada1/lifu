<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.WebHost</name>
  </assembly>
  <members>
    <member name="T:System.Web.Http.GlobalConfiguration">
      <summary> 提供 ASP.NET 應用程式的全域 <see cref="T:System.Web.Http.HttpConfiguration" />。</summary>
    </member>
    <member name="P:System.Web.Http.GlobalConfiguration.Configuration"></member>
    <member name="P:System.Web.Http.GlobalConfiguration.DefaultHandler">
      <summary> 取得將會針對所有要求呼叫的預設訊息處理常式。 </summary>
    </member>
    <member name="T:System.Web.Http.RouteCollectionExtensions">
      <summary>
        <see cref="T:System.Web.Routing.RouteCollection" /> 的擴充方法。</summary>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>對應指定的路由範本。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="routes">應用程式的路由集合。</param>
      <param name="name">要對應之路由的名稱。</param>
      <param name="routeTemplate">路由的路由範本。</param>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>對應指定的路由範本並設定預設路由。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="routes">應用程式的路由集合。</param>
      <param name="name">要對應之路由的名稱。</param>
      <param name="routeTemplate">路由的路由範本。</param>
      <param name="defaults">包含預設路由值的物件。</param>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>對應指定的路由範本並設定預設路由值和條件約束。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="routes">應用程式的路由集合。</param>
      <param name="name">要對應之路由的名稱。</param>
      <param name="routeTemplate">路由的路由範本。</param>
      <param name="defaults">包含預設路由值的物件。</param>
      <param name="constraints">為 routeTemplate 指定值的一組運算式。</param>
    </member>
    <member name="M:System.Web.Http.RouteCollectionExtensions.MapHttpRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.Net.Http.HttpMessageHandler)">
      <summary>對應指定的路由範本並設定預設的路由值、條件約束和端點訊息處理常式。</summary>
      <returns>已對應之路徑的參考。</returns>
      <param name="routes">應用程式的路由集合。</param>
      <param name="name">要對應之路由的名稱。</param>
      <param name="routeTemplate">路由的路由範本。</param>
      <param name="defaults">包含預設路由值的物件。</param>
      <param name="constraints">為 routeTemplate 指定值的一組運算式。</param>
      <param name="handler">要求將要發送至的處理常式。</param>
    </member>
    <member name="T:System.Web.Http.WebHost.HttpControllerHandler">
      <summary>
        <see cref="T:System.Web.IHttpAsyncHandler" /> 會傳送 ASP.NET 要求至 <see cref="T:System.Web.Http.HttpServer" /> 管線並寫入結果。</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.#ctor(System.Web.Routing.RouteData)">
      <summary> 初始化 <see cref="T:System.Web.Http.WebHost.HttpControllerHandler" /> 類別的新執行個體。</summary>
      <param name="routeData">路徑資料。</param>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary> 開始處理要求。</summary>
      <returns>包含處埋狀態相關資訊的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="httpContextBase">HTTP 內容基底。</param>
      <param name="callback">回呼。</param>
      <param name="state">狀態。</param>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.EndProcessRequest(System.IAsyncResult)">
      <summary> 當處理結束時，提供非同步處理結束方法。</summary>
      <param name="result">包含處埋狀態相關資訊的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:System.Web.Http.WebHost.HttpControllerHandler.IsReusable">
      <summary> 取得值，這個值表示另一個要求是否可以使用 <see cref="T:System.Web.IHttpHandler" /> 執行個體。</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary> 處理要求。</summary>
      <param name="httpContextBase">HTTP 內容基底。</param>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary> 開始處理要求。</summary>
      <returns>包含處埋狀態相關資訊的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="httpContext">HTTP 內容。</param>
      <param name="callback">回呼。</param>
      <param name="state">狀態。</param>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary> 當處理結束時，提供非同步處理結束方法。</summary>
      <param name="result">包含處埋狀態相關資訊的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:System.Web.Http.WebHost.HttpControllerHandler.System#Web#IHttpHandler#IsReusable">
      <summary> 取得值，這個值表示另一個要求是否可以使用 <see cref="T:System.Web.IHttpHandler" /> 執行個體。</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary> 處理要求。</summary>
      <param name="httpContext">HTTP 內容基底。</param>
    </member>
    <member name="T:System.Web.Http.WebHost.HttpControllerRouteHandler">
      <summary>
        <see cref="T:System.Web.Routing.IRouteHandler" /> 會傳回可傳送要求至給定 <see cref="T:System.Web.Http.HttpServer" /> 執行個體的 <see cref="T:System.Web.Http.WebHost.HttpControllerHandler" /> 執行個體。</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerRouteHandler.#ctor">
      <summary> 初始化 <see cref="T:System.Web.Http.WebHost.HttpControllerRouteHandler" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary> 提供處理要求的物件。</summary>
      <returns> 處理要求的物件。</returns>
      <param name="requestContext">封裝要求相關資訊的物件。</param>
    </member>
    <member name="P:System.Web.Http.WebHost.HttpControllerRouteHandler.Instance">
      <summary> 取得 singleton <see cref="T:System.Web.Http.WebHost.HttpControllerRouteHandler" /> 執行個體。</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.HttpControllerRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary> 提供處理要求的物件。</summary>
      <returns> 處理要求的物件。 </returns>
      <param name="requestContext">封裝要求相關資訊的物件。</param>
    </member>
    <member name="T:System.Web.Http.WebHost.PreApplicationStartCode">
      <summary>提供簡單成員資格應用程式啟動前程式碼的註冊點。</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.PreApplicationStartCode.Start">
      <summary>註冊簡單成員資格應用程式啟動前程式碼。</summary>
    </member>
    <member name="T:System.Web.Http.WebHost.WebHostBufferPolicySelector">
      <summary>表示 Web 主機緩衝區原則選取器。</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostBufferPolicySelector.#ctor">
      <summary>初始化 <see cref="T:System.Web.Http.WebHost.WebHostBufferPolicySelector" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>取得值，這個值表示主機是否應緩衝 HTTP 要求的實體內容。</summary>
      <returns>如果應使用緩衝，則為 true，否則應使用串流的要求。</returns>
      <param name="hostContext">主機內容。</param>
    </member>
    <member name="M:System.Web.Http.WebHost.WebHostBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>針對 Web 主機使用緩衝的輸出資料流。</summary>
      <returns>緩衝的輸出資料流。</returns>
      <param name="response">回應。</param>
    </member>
  </members>
</doc>